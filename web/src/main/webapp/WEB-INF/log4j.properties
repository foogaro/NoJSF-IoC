##
# Pattern Layout Symbols
#
# %r = millisecondi trascorsi dallo start dell'applicazione fino
#      alla generazione dell'evento di log.
# %t = nome del thread che ha generato l'evento di log.
# %p = priorita' (info, warn, debug. errror, ...)
# %c = classe dove si e' generato l'evento.
# %d{dd MMM yyyy HH:mm:ss} = data di sistema.
# %m = messaggio di log.
# %M = nome del metodo dove e' stato generato l'evento di log.
# %F = nome del codice sorgente dove si e' generato il log.
# %L = linea del codice sorgente dove si e' generato l'evento di log.
# %l = nome del codice sorgente, linea del codice sorgente dove si e' generato il log.
# %n = new line.
#
# inoltre, per ogni simbolo, e' possibile specificare una dimensione massima e
# l'allineamento mediante la seguente sintassi:
#     %[-][size][symbol]
#
# es. %-5p - scrive la priorita' con lunghezza fissa di
#            5 caratteri con allineamento a sinistra
#

log4j.rootLogger=DEBUG, stdout

#Generic Apache
log4j.logger.org.apache=DEBUG, stdout
#JAX-RS
log4j.logger.javax.ws=DEBUG, stdout
#Resteasy
log4j.logger.org.jboss=DEBUG, stdout
#AOP
log4j.logger.org.springaop=DEBUG, stdout
#SPRING
log4j.logger.org.springframework=DEBUG, stdout
